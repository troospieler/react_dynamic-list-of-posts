{"version":3,"sources":["api/posts.js","components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["POSTS_URL","COMMENTS_URL","getAllPosts","a","fetch","response","json","result","data","filter","post","title","truePosts","userId","filtered","postId","getPostComments","comment","createComment","postID","body","email","name","method","headers","JSON","stringify","remove","commentId","Loader","className","PostsList","userID","setPostID","posts","setPosts","useEffect","getUserPosts","then","length","map","key","id","type","onClick","getPostDetails","defaultProps","PropTypes","number","NewCommentForm","parsing","useState","setName","setEmail","commentText","setCommentText","onSubmit","e","preventDefault","placeholder","value","onChange","target","required","PostDetails","comments","setComments","postComments","chosenPost","find","commentsShown","setCommentsShown","show","hide","newPosts","newComments","res","disabled","App","setuserID","event","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d059aae1.chunk.js","sourcesContent":["const POSTS_URL = 'https://mate-api.herokuapp.com/posts';\nconst COMMENTS_URL = 'https://mate-api.herokuapp.com/comments';\n\nexport async function getAllPosts() {\n  const response = await fetch(POSTS_URL);\n  const result = await response.json();\n  const truePosts = await result.data.filter(post => post.title);\n\n  return truePosts;\n}\n\nexport async function getUserPosts(userId) {\n  const result = await getAllPosts();\n  const filtered = await result.filter((post) => {\n    if (userId === 0) {\n      return post;\n    }\n\n    return post.userId === userId;\n  });\n\n  // console.log(filtered);\n\n  return filtered;\n}\n\nexport async function getPostDetails(postId) {\n  const response = await fetch(`${POSTS_URL}/${postId}`);\n  const result = await response.json();\n\n  // console.log(result.data);\n\n  return result.data;\n}\n\nexport async function getPostComments(postId) {\n  const response = await fetch(COMMENTS_URL);\n  const result = await response.json();\n\n  const filtered = await result.data\n    .filter(comment => comment.postId === postId);\n\n  return filtered;\n  // const response = await fetch(`${COMMENTS_URL}/${postId}`);\n  // const result = await response.json();\n\n  // return result;\n}\n\nexport const createComment = async(postID, body, email, name) => {\n  const response = await fetch(COMMENTS_URL, {\n    method: 'POST',\n    headers: {\n      // eslint-disable-next-line quotes\n      \"Content-type\": \"application/json; charset=UTF-8\",\n    },\n    body: JSON.stringify({\n      postId: postID,\n      body,\n      email,\n      name,\n    }),\n  });\n  const result = await response.json();\n\n  // console.log(result);\n  return result;\n};\n\nexport const remove = async(commentId) => {\n  const response = await fetch(\n    `${COMMENTS_URL}/${commentId}`, { method: 'DELETE' },\n  );\n\n  // console.log(response);\n  return response;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getUserPosts, getPostDetails } from '../../api/posts';\nimport { Loader } from '../Loader/Loader';\nimport './PostsList.scss';\n\nexport const PostsList = ({ userID, setPostID, postID, posts, setPosts }) => {\n  useEffect(() => {\n    getUserPosts(userID).then(result => setPosts(result));\n  }, [userID, postID, setPosts]);\n\n  return !posts.length\n    ? <Loader />\n    : (\n      <div className=\"PostsList\">\n        <h2>Posts:</h2>\n        {posts.map(post => (\n          <li key={post.id} className=\"PostsList__item\">\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n            {post.id === postID ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => setPostID('')}\n              >\n                Close\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  getPostDetails(post.id);\n                  setPostID(post.id);\n                }}\n              >\n                Open\n              </button>\n            )}\n\n          </li>\n        ))}\n      </div>\n    );\n};\n\nPostsList.propTypes = {\n  userID: PropTypes.number.isRequired,\n  setPostID: PropTypes.func.isRequired,\n  setPosts: PropTypes.func.isRequired,\n  // postID: PropTypes.func, // ??? почему это функция???\n  postID: PropTypes.number,\n  posts: PropTypes.arrayOf(PropTypes.object),\n};\n\nPostsList.defaultProps = {\n  posts: [],\n  postID: PropTypes.number,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { createComment } from '../../api/posts';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postID, parsing }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [commentText, setCommentText] = useState('');\n\n  const formCleaner = () => {\n    setName('');\n    setEmail('');\n    setCommentText('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={async(e) => {\n        e.preventDefault();\n        formCleaner();\n        // eslint-disable-next-line max-len\n        await createComment(postID, commentText, email, name); // (id, postID, body, email, name)\n        await parsing();\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={commentText}\n          onChange={e => setCommentText(e.target.value)}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postID: PropTypes.number.isRequired,\n  parsing: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostComments, remove } from '../../api/posts';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({\n  posts,\n  postID,\n  comments,\n  setComments,\n  postComments,\n}) => {\n  const chosenPost = posts.find(post => post.id === postID);\n  const [commentsShown, setCommentsShown] = useState(false);\n  const show = postComments ? `Show ${postComments} comments` : 'no comments';\n  const hide = postComments ? 'Hide comments' : 'no comments';\n\n  const parsing = async() => {\n    const newPosts = await getPostComments(postID);\n    const newComments = await setComments(newPosts);\n\n    return newComments;\n  };\n\n  useEffect(() => {\n    getPostComments(postID).then(res => setComments(res));\n  }, [postID]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{chosenPost.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setCommentsShown(!commentsShown)}\n          disabled={!postComments}\n        >\n          {commentsShown ? hide : show}\n        </button>\n\n        {commentsShown && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li key={comment.id} className=\"PostDetails__list-item\">\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={async() => {\n                    await remove(comment.id);\n                    await parsing();\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            parsing={parsing}\n            postID={postID}\n            comments={comments}\n            getPostComments={getPostComments}\n            setComments={setComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n  })).isRequired,\n  postID: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n  postComments: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [userID, setuserID] = useState(0);\n  const [postID, setPostID] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n  const postComments = comments.length;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => {\n              setuserID(+event.target.value);\n              setPostID(null);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            postID={postID}\n            setPostID={setPostID}\n            userID={userID}\n            posts={posts}\n            setPosts={setPosts}\n          />\n        </div>\n\n        {postID && (\n          <div className=\"App__content\">\n            <PostDetails\n              userID={userID}\n              posts={posts}\n              postID={postID}\n              setComments={setComments}\n              postComments={postComments}\n              comments={comments}\n            />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}